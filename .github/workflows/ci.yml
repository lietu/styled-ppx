name: Ppx CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [macos-latest, ubuntu-18.04]
        os: [macos-latest, windows-latest, ubuntu-18.04]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Load global cache (~/.esy/source)
        uses: actions/cache@v2
        with:
          path: ~/.esy/source
          key: source-${{ matrix.os }}-${{ hashFiles('**/index.json') }}

      - name: Install esy
        run: npm install -g esy@0.6.11

      - name: Install dependencies
        run: esy install

      - name: Print esy cache
        id: print_esy_cache
        run: node .github/workflows/print-esy-cache.js

      - name: Load dependencies cache
        id: deps-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.print_esy_cache.outputs.esy_cache }}
          key: build-${{ matrix.os }}-${{ hashFiles('**/index.json') }}
          restore-keys: build-${{ matrix.os }}-

      - name: Import dependencies
        run: esy import-build

      - name: Build dependencies
        run: esy build-dependencies

      - name: Build
        run: esy build

      - name: Run ppx Native tests
        run: esy test_native

      - name: Run CSS Support tests
        run: esy test_css_support

      - name: Run ppx Native snapshot tests
        run: esy test_snapshot

      - name: Run runtests for Parser, vds & Lexer
        run: esy test

      - name: Export dependencies
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: esy export-dependencies

      - name: Release static
        run: esy release-static

      - name: Upload artifacts for ${{ matrix.os }}
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}
          path: _build/default/bin/ppx.exe

      # Cleanup build cache in case dependencies have changed
      - name: Cleanup
        run: esy cleanup .

  e2e:
    name: BuckleScript tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]
    needs: build

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Download artifacts
        uses: actions/download-artifact@master
        with:
          name: ${{ matrix.os }}
          path: _build/default/bin

      - name: Grant permission to run ppx
        run: chmod +x _build/default/bin/ppx.exe

      - name: Get cache directory path
        id: yarn-cache-dir-path
        working-directory: ./packages/ppx/test/bucklescript
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Load global cache
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ matrix.os }}-${{ hashFiles('./packages/ppx/test/bucklescript/yarn.lock') }}
          restore-keys: yarn-${{ matrix.os }}-

      - name: Install dependencies
        working-directory: ./packages/ppx/test/bucklescript
        run: yarn

      - name: Build
        working-directory: ./packages/ppx/test/bucklescript
        run: yarn build

      - name: Test
        working-directory: ./packages/ppx/test/bucklescript
        run: yarn test

  publish:
    name: Publish
    runs-on: ubuntu-18.04
    needs: build

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Make NPM release skeleton
        run: node scripts/release-make-skeleton.js

      - name: Print short SHA
        id: sha
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Download linux artifacts
        uses: actions/download-artifact@master
        with:
          name: ubuntu-18.04
          path: _release/platform-linux-x64

      - name: Download macOS artifacts
        uses: actions/download-artifact@master
        with:
          name: macos-latest
          path: _release/platform-darwin-x64

      - name: Download windows artifacts
        uses: actions/download-artifact@master
        with:
          name: windows-latest
          path: _release/platform-windows-x64

      - name: Create archives for Github release
        run: |
          cd _release/platform-darwin-x64
          zip -r ../../styled-ppx-darwin-x64.zip .
          cd ../..

          cd _release/platform-linux-x64
          zip -r ../../styled-ppx-linux-x64.zip .
          cd ../..

          cd _release/platform-windows-x64
          zip -r ../../styled-ppx-windows-x64.zip .
          cd ../..
          

